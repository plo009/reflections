When would you want to create a remote repository rather than keeping all your work local?
    You would want to create a remote repository rather than kepp all you work local when you are working on crucial work that needs backup and also when you're working with a group of people remotely from different locations.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
    You might want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository because there may be changes or updates on the remote repository that you wouldn't like on your local version, it may change or break you local program.

Describe the differences between forks, clones, and branches. When would you use one instead of another?
    A fork is a clone on GitHub of a repository on GitHub. 
    You can clone a online repository to your local machine or a local repository to a different location on your machine
    A branch is kind of like a clone such that you can work on new or experimental features on the branch and not change he master branch, you can also merge two branches together to combine the features on different branches.

What is the benefit of having a copy of the last known state of the remote stored locally?
    git pull = git fetch + git merge
    You can know if you repository is ahead or behind the remote. 
    When merge conflict occures between your repository and the remote you can use origin/master to merge with your master to solve the conflict and commit the merge and lasly push your changes.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
    Collaborating with GitHub or any version control would make everything alot harder. There will be no logs of changes or updates, no detection of differences and conflict as well as conflict solving method. It would also be difficult syncing muiltiple files and sharing it between multiple users.
    
When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?

    ***cbuckey-uda answer***

    I tend to work directly in master more often when I'm working on my own or
    with just one or two other people.  When working with a large group, though,
    using branches to keep track of which changes have already been reviewed and
    approved is extremely helpful.
